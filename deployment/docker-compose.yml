services:
  mongo:
    image: mongo:6.0
    container_name: my_app_mongo
    restart: unless-stopped
    env_file:
      - ../backend/.env
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: my_app_backend
    restart: unless-stopped
    env_file:
      - ../backend/.env
    volumes:
      - static_data:/app/public/uploads
    expose:
      - "5000"
    depends_on:
      - mongo
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: my_app_frontend
    restart: unless-stopped
    expose:
      - "80"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: my_app_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
  static_data:
  certbot_conf:
  certbot_www:
